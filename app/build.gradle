plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.weather"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('cicd/debug/weather-debug.jks')
            keyAlias 'debug'
            keyPassword 'weather4680'
            storePassword 'weather4680'
        }
        release {
            storeFile rootProject.file('cicd/release/weather-release.jks')
            keyAlias 'release'
            keyPassword 'weather4680'
            storePassword 'weather4680'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField("String", "SERVER_URL", "\"https://community-open-weather-map.p.rapidapi.com/\"")
            buildConfigField("String", "KEY_WEATHER_API", "\"bfb158935emshd25b0bf7e2a4109p164c94jsn099e481b6559\"")
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("String", "SERVER_URL", "\"https://community-open-weather-map.p.rapidapi.com/\"")
            buildConfigField("String", "KEY_WEATHER_API", "\"bfb158935emshd25b0bf7e2a4109p164c94jsn099e481b6559\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        exclude("META-INF/*.kotlin_module")
    }
}

ext.versions = [
        'lifecycle'       : "2.2.0",
        'koin'            : "2.2.0",
        'moshi'           : "1.9.2",
        'androidx_testing': "1.3.0",
        'room'            : "2.2.6",
        'navigation'     : "2.3.3"
]

dependencies {
    //kotlin stdlib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //androidx
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    //koin for DI
    implementation "org.koin:koin-core:${versions.koin}"
    implementation "org.koin:koin-android:${versions.koin}"
    implementation "org.koin:koin-androidx-scope:${versions.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"

    //google material lib
    implementation 'com.google.android.material:material:1.3.0'

    //constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    //lifecycle libs
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.retrofit2:converter-moshi:2.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.4.0"

    //moshi
    implementation "com.squareup.moshi:moshi-adapters:${versions.moshi}"
    implementation "com.squareup.moshi:moshi-kotlin:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    //Logging
    implementation 'com.orhanobut:logger:2.2.0'

    //desugar for java apis
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    //location services
    implementation 'com.google.android.gms:play-services-location:17.1.0'

    //local broadcast
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    //room
    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    kapt  "androidx.room:room-compiler:${versions.room}"

    //testing
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "junit:junit:4.13.1"
    testImplementation "org.mockito:mockito-core:3.3.1"
    testImplementation "androidx.test:rules:${versions.androidx_testing}"
    testImplementation "androidx.test:runner:${versions.androidx_testing}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    //UI testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
}